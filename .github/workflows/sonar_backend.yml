name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov pymongo fastapi httpx motor

      # Instala herramientas para C/C++ (bear o build-wrapper)
      - name: Install build-essential and bear
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bear

      # Genera compile_commands.json (ejemplo con make)
      - name: Generate compilation database
        run: |
          bear -- make clean all  # Genera compile_commands.json

      - name: Run tests with coverage
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pytest --cov=Services --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=ISCODEVUTB_CodeForGood
            -Dsonar.organization=deviscoutb
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.cfamily.compile-commands=compile_commands.json  # Ruta a la base de compilaci√≥n
